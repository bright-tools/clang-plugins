project(brighttools-clang-plugins)
cmake_minimum_required(VERSION 2.8)
enable_testing()

set(CLANG_VERSION_MAJOR 11)
set(CLANG_VERSION ${CLANG_VERSION_MAJOR}.1)
set(PACKAGE_NAME ${CMAKE_PROJECT_NAME}-${CLANG_VERSION_MAJOR})
set(PACKAGE_VERSION 0.3.1)
set(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
set(PACKAGE_BUGREPORT "dev@brightsilence.org")

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
set(CMAKE_DOCUMENT_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
execute_process(COMMAND dpkg --print-architecture OUTPUT_VARIABLE PACKAGE_ARCHITECTURE)
string(STRIP ${PACKAGE_ARCHITECTURE} PACKAGE_ARCHITECTURE)
message(STATUS "Architecture: ${PACKAGE_ARCHITECTURE}")

# LLVM

find_package(LLVM ${CLANG_VERSION} REQUIRED CONFIG HINTS ${LLVM_DIR})
message(STATUS "LLVM version: ${LLVM_PACKAGE_VERSION}")
message(STATUS "LLVMConfig.cmake found in: ${LLVM_DIR}")
list(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")
include(AddLLVM)

# clang

find_package(Clang REQUIRED CONFIG HINTS ${LLVM_INSTALL_PREFIX}/lib/cmake/clang)
include_directories(SYSTEM ${LLVM_INCLUDE_DIRS} ${CLANG_INCLUDE_DIRS})
add_definitions(${LLVM_DEFINITIONS})
message(STATUS "clang found in: ${CLANG_INSTALL_PREFIX}")

set(CLANG_EXE clang-${CLANG_VERSION_MAJOR})
set(SUBMODULES_ROOT ${PROJECT_SOURCE_DIR}/submodules)
set(BATS_EXE ${SUBMODULES_ROOT}/bats-core/bin/bats)

set(TEST_ENVIRONMENT "SUBMODULES_ROOT=${SUBMODULES_ROOT};CLANG_EXE=${CLANG_EXE}")

add_subdirectory(src)
add_subdirectory(doc)

set(CPACK_GENERATOR "DEB")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER ${PACKAGE_BUGREPORT})
set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
set(CPACK_DEBIAN_PACKAGE_NAME ${PACKAGE_NAME})
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "https://github.com/bright-tools/clang-plugins")
set(CPACK_DEBIAN_PACKAGE_DESCRIPTION "Additional plugins & checkers for clang")
set(CPACK_DEBIAN_PACKAGE_DEPENDS "clang-${CLANG_VERSION_MAJOR}")
set(CPACK_DEBIAN_PACKAGE_VERSION ${PACKAGE_VERSION})
set(CPACK_DEBIAN_FILE_NAME "${PACKAGE_NAME}_${PACKAGE_VERSION}-${PACKAGE_ARCHITECTURE}.deb")
include(CPack)